@startuml class diagram

skin rose
!theme blueprint

title Class Diagram - Harmony Heaven Ecommerce

class User {
    + UUID id
    + String name
    + String email
    + String password
    + String address
    + String phone
    + String role

    + Register()
    + Login()
    + GetProfile()
    + UpdateProfile()
    + DeleteProfile()
    + AddToCart()
    + RemoveFromCart()
    + AddCommand()
    + CancelCommand()
    + AddPayment()
    + AddDelivery()
    + GetReceipt()
    + Logout()
}

class Product {
    + Int id
    + String name
    + String description
    + Float price
    + String image
    + String type
    + String label
    + String year
    + String country
    + String format
    + Genre genre
    + Style style
    + Int stock

    + getProduct()
    + createNewProduct()
    + updateProduct()
    + deleteProduct()
    + updateStock()
    + getStock()
}

class Genre {
    + Int id
    + String name
    + String description

    + getGenre()
    + createNewGenre()
    + updateGenre()
    + deleteGenre()

}

class Style {
    + Int id
    + String name
    + String description

    + getStyle()
    + createNewStyle()
    + updateStyle()
    + deleteStyle()
}

class Cart {
    + Int id
    + User user_id
    + Product product_id
    + Quantity quantity

    + getCart()
    + addProductToCart()
    + updateCart()
    + removeProductFromCart()
    + setEmptyCart()
}

class Command {
    + Int id
    + User user_id
    + Product product_id
    + Payment payment_id
    + Delivery delivery_id
    + String Status

    + getCommand()
    + createCommandeFromCart()
    + cancelCommand()
    + getStatus
    + updateStatus()
}

class Receipt {
    + Int id
    + Command command_id
    + Product product_id

    + getReceipt()
    + sendEmailReceipt()
}

class Payment {
    + Int id
    + PaymentMethod paymentMethod
    + String status
    + Float amountPaid

    + getPaymentStatus()
    + updatePaymentStatus()
    + getAmountPaid()
}

class PaymentMethod {
    + Int id
    + String name
    + String description

    + getPaymentMethod()
    + createNewPaymentMethod()
    + updatePaymentMethod()
    + deletePaymentMethod()
}

class Delivery {
    + Int id
    + String address
    + String status
    + Date deliveryDate
    + String deliveryMethod
    + Float deliveryCost

    + getDeliveryStatus()
    + updateDeliveryStatus()
    + getDeliveryDate()
    + updateDeliveryDate()
    + getDeliveryMethod()
    + updateDeliveryMethod()
    + getDeliveryCost()
    
}

'Un User peut avoir plusieurs Cart et Command (OneToMany)

User "1" -- "0..*" Cart 

User "1" -- "0..*" Command 

'Un Product peut Ãªtre dans plusieurs Cart et Command, et peut avoir plusieurs Genre et Style (ManyToMany)

Product "*" -- "0..*" Cart 

Product "*" -- "0..*" Command 

Product "*" -- "0..*" Genre 

Product "*" -- "0..*" Style 

'Une Command a un Receipt, un Payment et un Delivery (OneToOne)

Command "1" -- "1" Receipt 

Command "1" -- "1" Payment 

Command "1" -- "1" Delivery 

'Un Payment a un PaymentMethod (OneToOne)

Payment "1" -- "1" PaymentMethod 

@enduml